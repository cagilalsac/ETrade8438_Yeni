@model HomeIndexViewModel
@*Model namespace using directive should be added to _ViewImports.cshtml.*@

@{
    ViewData["Title"] = "Report";
}

<h1>@ViewData["Title"]</h1>

<form asp-action="Index" method="get">
    <div class="row">
        <div class="col-2">
            @await Component.InvokeAsync("Categories")
        </div>

        <div class="col-10">
            <h5>Filters</h5>
            <hr />
            <div class="row">


                <div class="col-4">
                    <input asp-for="Filter.ProductName" class="form-control" placeholder="@Html.DisplayNameFor(m => m.Filter.ProductName)" />
                </div>
                <div class="col-4">
                    <select asp-for="Filter.CategoryId" asp-items="Model.Categories" class="form-select">
                        <option value="">@Html.DisplayNameFor(m => m.Filter.CategoryId)</option>
                    </select>
                </div>
                <div class="col-4">
                    <input asp-for="Filter.UnitPriceBegin" placeholder="@Html.DisplayNameFor(m => m.Filter.UnitPriceBegin)">
                    <input asp-for="Filter.UnitPriceEnd">
                </div>
            </div>

            <div class="row" style="padding-top: 15px;">
                <div class="col-12">
                    <button type="submit" class="btn btn-primary">Search</button>
                    &nbsp;&nbsp;
                    <a asp-action="Index" class="btn btn-outline-primary">Clear</a>
                </div>
            </div>
        </div>
    </div>

    @if (Model.Report != null && Model.Report.Count > 0)
    {
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Report.FirstOrDefault().StoreName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Report.FirstOrDefault().CategoryName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Report.FirstOrDefault().ProductName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Report.FirstOrDefault().UnitPrice)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Report.FirstOrDefault().StockAmount)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Report.FirstOrDefault().ExpirationDate)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Report)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.StoreName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CategoryName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProductName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UnitPrice)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StockAmount)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ExpirationDate)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p class="text-danger">Record not found.</p>
    }
</form>

